@use 'sass:color';
@use '../../../helpers' as *;

.#{$namespace}input-label {
  $root: &;

  --#{$namespace}label-font-size: #{scss-var(font, size, xsmall)};

  display: flex;
  flex-wrap: wrap;
  align-items: center;

  &:not(.#{$namespace}no-margin) {
    margin-bottom: size(0.5);
  }

  &__label {
    @include font-medium;

    display: block;
    color: color(text, main);
    font-size: var(--#{$namespace}label-font-size);

    #{$root}--has-error & {
      color: color(semantic, error, text);
    }

    &--is-required {
      &::after {
        content: '*';
        margin-left: 0.25ch;
        color: color(semantic, error, text);
      }
    }
  }

  &__help {
    flex-shrink: 0;
    position: relative; // Used to place help-btn focus above foldout
    margin-left: auto;
  }

  &__help-btn {
    position: relative;
    font-size: scss-var(font, size, regular);
    color: color(primary, main);
    border-radius: 50%; // Used to display a round focus outline
    transition: color 200ms ease;

    &:hover {
      color: color.adjust(color(primary, main), $lightness: -5%);
    }

    // Increase hitbox of button to increase accessibility
    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: size(5);
      height: size(5);
      transform: translate(-50%, -50%);
      border-radius: 50%;
    }
  }

  &__foldout {
    $content-margin: 0.75em; // Same value as in content component

    @include remove-direct-child-edge-margins;

    width: 100%;
    background-color: color(bg, alt);
    padding: size(1.5);
    margin-top: size(0.5);
    border-radius: scss-var(border, radius, main);
    font-size: scss-var(font, size, xsmall);

    p,
    ul,
    ol {
      margin: $content-margin 0;
    }

    ul {
      padding-left: size(4);
    }
  }
}
